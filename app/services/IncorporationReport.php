<?php

class IncorporationReport extends TCPDF {

	protected $business;
	protected $user;

	protected $img_path = 'img/pdf';

	public function __construct(Business $business, User $user)
	{
		parent::__construct(PDF_PAGE_ORIENTATION, PDF_UNIT, array(215.9,279.4), true, 'UTF-8', false);

		// set document information
		$this->SetCreator('');
		$this->SetAuthor('Pro Media Consultants');
		$this->SetTitle('Incorporation Report');
		$this->SetSubject('PDF Export');

		// set default header data
	//	$this->SetHeaderData(PDF_HEADER_LOGO, PDF_HEADER_LOGO_WIDTH, PDF_HEADER_TITLE.' 006', PDF_HEADER_STRING);

		// set header and footer fonts
		$this->setHeaderFont(Array(PDF_FONT_NAME_MAIN, '', PDF_FONT_SIZE_MAIN));
		$this->setFooterFont(Array(PDF_FONT_NAME_DATA, '', PDF_FONT_SIZE_DATA));

		// set default monospaced font
		$this->SetDefaultMonospacedFont(PDF_FONT_MONOSPACED);

		// set margins
		$this->SetMargins(PDF_MARGIN_LEFT, 10, PDF_MARGIN_RIGHT);
		$this->SetHeaderMargin(8);
		$this->SetFooterMargin(1);		
		//$this->SetMargins(PDF_MARGIN_LEFT, PDF_MARGIN_TOP, PDF_MARGIN_RIGHT);
		//$this->SetHeaderMargin(PDF_MARGIN_HEADER);
		//$this->SetFooterMargin(PDF_MARGIN_FOOTER);

		// set auto page breaks
		$this->SetAutoPageBreak(TRUE, PDF_MARGIN_BOTTOM);

		// set image scale factor
		$this->setImageScale(PDF_IMAGE_SCALE_RATIO);

		// set some language-dependent strings (optional)
		if (@file_exists(dirname(__FILE__).'/lang/eng.php')) {
			require_once(dirname(__FILE__).'/lang/eng.php');
			$this->setLanguageArray($l);
		}

		// set font
		$this->setTextColor(0, 0, 0);
	//	$this->SetFont('dejavusans', '', 10);
		$this->business = $business;
		$this->practicepro_user = Session::get('practicepro_user');
		$this->user = $user;
	}

	public function Header() 
	{
		
	}

	public function Footer() 
	{
		if ($this->getNumPages() == 1) {
			return;					
		} 

		$this->SetY(-24);	
		$this->setTextColor(185, 139, 55);
		$this->SetFont('frabk', '', 10, '', true);

		$this->MultiCell(0, 5, 'Generated by Pro Media Consultants', 0, 'R', 0, 0, '', 270, true);
	}

	public function buildCoverPage()
	{
		//do not print header and footer in cover page
		$this->setPrintHeader(false);
		$this->setPrintFooter(false);
		
		$this->AddPage();
		
		//pagebreak off to expand images
		$this->SetAutoPageBreak(false,0);
		
		$this->Image('assets/img/pdf/cover-bg2.jpg', 0, 0, 215.9,279.4, 'JPEG',null ,null ,2);
	
		// Set some content to print
		$this->SetFont('rockb', '', 26, '', true);
		$this->setTextColor(250, 230, 206);
		$this->MultiCell(190, 5, 'Incorporation Report', 0, 'C', 0, 0, '', 78, true);

		$this->SetFont('frabk', '', 12, '', true);
		$this->MultiCell(190, 5, 'Prepared ' . date('F, Y', strtotime($this->business->created_at)), 0, 'C', 0, 0, '', 88, true);

		$this->SetFont('fradmcn', '', 15, '', true);
		$this->setTextColor(204, 0, 0);

		$this->MultiCell(155, 5, 'CONTACT INFORMATION', 0, 'L', 0, 0, '', 240, true);

		$this->SetFont('frabk', '', 10, '', true);
		$this->setTextColor(250, 230, 206);


		$this->MultiCell(0, 5, $this->practicepro_user->mh2_fname . ', ' . $this->practicepro_user->mh2_lname, 0, 'L', 0, 0, '', 248, true);
		$this->MultiCell(0, 5, $this->practicepro_user->mh2_company_address, 0, 'R', 0, 0, '', 248, true);

		$this->MultiCell(0, 5, $this->user->email, 0, 'L', 0, 0, '', 252, true);
		$this->MultiCell(0, 5, '', 0, 'R', 0, 0, '', 252, true);

		$this->MultiCell(0, 5, $this->practicepro_user->phone, 0, 'L', 0, 0, '', 256, true);
		$this->MultiCell(0, 5, $this->practicepro_user->web_url, 0, 'R', 0, 0, '', 256, true);

		$this->MultiCell(0, 5, '', 0, 'L', 0, 0, '', 260, true);
		$this->MultiCell(0, 5, $this->practicepro_user->town_city_country . ' ' . $this->practicepro_user->postcode, 0, 'R', 0, 0, '', 260, true); 

		//reset true to include header and footer for succeeding pages
		$this->setPrintHeader(true);
		$this->setPrintFooter(true);
		
		$this->SetAutoPageBreak(TRUE, PDF_MARGIN_BOTTOM);

	}

	public function toPdf()
	{
		$this->buildCoverPage();

		$this->setTextColor(0, 0, 0);
		$style = View::make("goodwill.pdf_styles")->render();

		$pages = array(
			'introduction',
			'benefits',
			'summary',
			'services',
			'acknowledgement'
		);
		foreach ($pages as $page) {
			$fn = 'build' . ucwords($page);

			$data = method_exists($this, $fn) ? $this->$fn() : array();

			$html = View::make("pdf/incorporation/{$page}", $data)->render();

			$this->AddPage();
			$this->writeHTML($style . $html, true, false, true, false, '');
		}

		$this->Output("incorporation.pdf", 'D');
	}

	public function buildSummary()
	{
		$data = array();

		$service = new SummaryTotalSavingsService($this->business);
		$data['total_savings_data'] = $service->getData();

		$service = new SummaryGraphService($this->business);
		$data['graphs_data'] = $service->getData();

		$data['user'] = $this->user;

		return $data;
	}

}
